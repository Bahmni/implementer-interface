name: Build and Publish
on:
  push:
    branches:
      - master
      - 'release-*'
      - BAH-2303
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run tests
        run: yarn test
      - name: Package
        run: yarn ci
      - name: Upload implementer_interface zip
        uses: actions/upload-artifact@v3
        with:
          name: implementer_interface.zip
          path: dist/implementer_interface.zip

  docker-build-publish:
    name: Docker Build Publish
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2
      - name: Set artifact version
        run: |
          wget -q https://raw.githubusercontent.com/Bahmni/bahmni-infra-utils/main/setArtifactVersion.sh && chmod +x setArtifactVersion.sh
          ./setArtifactVersion.sh
          rm setArtifactVersion.sh
      - uses: actions/download-artifact@v3
        with:
          name: implementer_interface.zip
          path: .
      - name: Unzip implementer_interface.zip
        run: unzip -d dist implementer_interface.zip
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Docker Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: package/docker/Dockerfile
          push: true
          tags: bahmni/implementer-interface:${{env.ARTIFACT_VERSION}},bahmni/implementer-interface:latest

  rpm-build-publish:
    name: RPM Build Publish
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2
      - name: Set artifact version
        run: |
          wget -q https://raw.githubusercontent.com/Bahmni/bahmni-infra-utils/main/setArtifactVersion.sh && chmod +x setArtifactVersion.sh
          ./setArtifactVersion.sh
          rm setArtifactVersion.sh
      - uses: actions/download-artifact@v3
        with:
          name: implementer_interface.zip
          path: package/rpm/resources
      - name: Setup Java 8 for Gradle
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '8'
      - name: Build RPM
        run: |
          cd package/rpm
          export version=$(awk -F- '{print $1}' <<< ${{env.ARTIFACT_VERSION}})
          export release=$(awk -F- '{print $2}' <<< ${{env.ARTIFACT_VERSION}})
          ./gradlew -Pversion=$version -Prelease=$release clean buildRpm
      - uses: actions/upload-artifact@v3
        with:
          name: implementer-interface-rpm
          path: package/rpm/build/distributions/*.rpm


